任何变量都需要先申明，再赋值，最后再使用
i++放后面，表示先取值再++
当进行打印时，无论任何类型，都自动转换为字符串进行打印
类是一类事物的抽象，对象是类的具体某一个实例

Java的方法类似于其他语言的函数，是一段用来完成特定功能的代码片段，声明格式：
[修饰符1   修饰符2….] 返回类型  方法名（形式参数列表）{
	Java语句；。。。
}
形式参数：在方法被调用时用于接收外接输入的数据。
实参：调用方法时实际传给方法的数据
返回值：方法在执行完毕后返还给调用它的环境的数据
返回值类型：事先约定的返回值的数据类型，如无返回值，必须给出返回值类型void
Java语言中使用下述形式调用方法：对象名.方法名(实参列表)
实参的数量、数据类型和次序必须和所调用方法声明的形参列表匹配，return语句终止方法的运行并指定要返回的数据类型
Java中进行函数调用中传递参数时，遵循值传递的原则：
基本类型传递的是该数据值本身。引用类型传递的是对象的引用，而不是对象本身

static、final、private 方法本身都是编译期绑定的（也叫前期绑定）这些方法 不存在多态，他们是在还没有运行的时候，
程序在编译器里面就知道该调用哪个类的哪个方法了，而其他可观察的普通方法的绑定是在运行的时候根据具体的对象决定的，
因为从语义上看这些方法是可被继承的，有了多态而造成了不确定性。 

关于final的重要知识点
1.final关键字可以用于成员变量、本地变量、方法以及类。
2.final成员变量必须在声明的时候初始化或者在构造器中初始化，否则就会报编译错误。
3.你不能够对final变量再次赋值。
4.本地变量必须在声明时赋值。
5.在匿名类中所有变量都必须是final变量。
6.final方法不能被重写。
7.final类不能被继承。
8.final关键字不同于finally关键字，后者用于异常处理。
9.final关键字容易与finalize()方法搞混，后者是在Object类中定义的方法，是在垃圾回收之前被JVM调用的方法。
10.接口中声明的所有变量本身是final的。
11.final和abstract这两个关键字是反相关的，final类就不可能是abstract的。
12.final方法在编译阶段绑定，称为静态绑定(static binding)。
13.没有在声明时初始化final变量的称为空白final变量(blank final variable)，它们必须在构造器中初始化，或者调用this()初始化。
	不这么做的话，编译器会报错“final变量(变量名)需要进行初始化”。
14.将类、方法、变量声明为final能够提高性能，这样JVM就有机会进行估计，然后优化。
15.按照Java代码惯例，final变量就是常量，而且通常常量名要大写：

return是跳出方法的
break是结束整个循环体，continue是结束单次循环
 1、return 语句的作用
      (1) return 从当前的方法中退出,返回到该调用的方法的语句处,继续执行。
      (2) return 返回一个值给调用该方法的语句，返回值的数据类型必须与方法的声明中的返回值的类型一致。
      (3) return后面也可以不带参数，不带参数就是返回空，其实主要目的就是用于想中断函数执行，返回调用函数处。
  2.  break 语句的作用
    （1）break在循环体内，强行结束循环的执行，也就是结束整个循环过程，不在判断执行循环的条件是否成立，直接转向循环语句下面的语句。
    （2）当break出现在循环体中的switch语句体内时，其作用只是跳出该switch语句体。
		注意:
	1)break语句对if-else的条件语句不起作用。
	2)在多层循环中, 一个break语句只向外跳一层
  3.continue 语句的作用
      终止本次循环的执行，即跳过当前这次循环中continue语句后尚未执行的语句，接着进行下一次循环条件的判断。
	  continue语句只用在for、while、do-while等循环体中,常与if条件语句一起使用,用来加速循环。

如果父类没有空构造，那么子类每个构造器都必须直接或间接调用父类的有参构造器，否则会编译出错

构造器
作用：对对象的信息进行初始化
特点：当我们没有显示定义任何构造方法时，系统会自动生成一个空构造；
	  只有在创建对象时由系统调用；
	  this();只能在构造器的第一行，并且多个构造器之间不能形成回路
	  不能被static、final、abstract修饰
this：当前对象
	1.当局部变量和属性同名时，可以使用this来区分
	2.在构造器当中调用其他构造器
	3.当作当前对象的引用返回给调用者
super：父类对象的引用
	1.明确调用的内容是属于父类的内容
	2.使用super显示调用父类的构造器，而且只能在第一行
static：静态的，共享的	
	属性：属性的存在时机(跟随类的存在而存在，先于对象的存在);该属性将变成所有对象共同	   所有。类名.属性名；对象名.属性名；对象名
	方法：该方法先于对象存在。类名.方法名()
		  只能访问静态的内容
	语句块：静态块。类加载时执行，而且只执行一次(类一般来说只会加载一次)
final：最终的
	变量：变量的值将不能改变(只有一次赋值机会)，常量
	方法：该方法不能被重写(在子类中不能出现同签名的方法)
	类：该类不能被继承

